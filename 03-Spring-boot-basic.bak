										Spring boot basic
										==================
1 : define a spring boot?
-------------------------
		org
3 : What is Spring Boot ? Why did you use sprinig boot in your project ? why not spring?
---------------------------------------------------------------------------------------

--> Spring boot is an extension of a spring framwwork.
--> Spring boot provides an eaiser and faster way to setup , configure and run an application.

why:
--> Spring boot is a spring module that provide RAD [ rapid application development ] for a spring framwwork.
--> Spring-boot is a combination of a spring framework and embedded tomact server.
--> Spring-boot create stand-alone application that can start using java -jar 
--> there is no requirement of xml configuration.

2 : Spring-boot features?
-------------------------
1 : spring-boot-starter
2 : spring-boot autocifiguration
3 : spring-boot actuator
4 : Predeined template : JDBC Template , hibernate Template
5 : Loose coupling  : it is achive using layers mechanisum : serivces layer, presentation layer , dB layer
6 : light weight
7 : Easy to test
8 : fast developement (RAD : rapid application developement)
9 : Spring initiliazer
10: spring CLI

3 : different way to craete a spring boot project?
--------------------------------------------------
1 : using spring initiliazer : Spring.io
2 : using spring stater project  in STS.
3: using Spring-boot CLI

4 : spring boot application execution?
-------------------------------------
1 : spring boot application execution start from "main()" method.
2 : the main() methode internally call " springApplication.run() " methode.
3 : run() methode perfrom " bootstraping "for our spring-boot application.
4 : run() start call "stop watch" to identify time taken to bootstrap the spring boot application.
5 : run() prepare environment to run our spring boot application .[ dev, QA, production]
6 : run() print a banner [ Spring boot logo print on consol]
7 : run() start IOC conatiner based on class path.
8 : run() refresh the context.
9 : run() method trig the Trigger Runner (ApplicationRunner or CommandLineRunner)
10: run() method return IOC conatiner, Application context reference.


5 : what is mean by bootstraping?
-------------------------------
1 : Run() method load all the autocifiguration .
2 : It is resposible to executed all the autocifiguration class.
3 : run() create an IOC conatiner.
4 : load the component.

6 : uses of spring-boot?
------------------------
1 : web developement
2 : spring application
3 : security
4 : loggin
5 : admin features


5 : differnce between spring-boot and spring?
--------------------------------------------

spring
------
1 : Spring is web application framwwork based on java
2 : spring is more complex then spring-boot
spring-boot
-----------
1 : Spring-boot is module of spring framwwork
2 : spring-boot is less complex then spring

6 : what is mean by spring initiliazer?
--------------------------------------
--> spring initiliazer is used to create a starter spring boot project.


7 : Spring-boot used which embedded server?
---------------------------------------
--> spring boot provided tomcat embedded server ?

8 : Running spring-boot apps?
-----------------------------
--> java -jar target/jar-file-name 
--> mvn spring-boot: run

9 : Spring-boot FAQ : frequnnety asked question
------------------------------------------------
	A : does spring-boot replace spring MVC ,Spring REST , Spring Core , Spring AOP etc?
	->: No : instead spring boot actually uses thoses technologies in the background
	
	B : does Spring boot code run faster than regular spring code?
	->: No
	->: Behind the scenes,Spring boot uses same code of Spring Framework.[spring MVC ,Spring REST , Spring Core]\
	
	c : Do i need specail IDE for Spring boot?
	->: no
	->: you van used any IDE for Spring-boot even use plain text editor
	
	
10 : spring boot initiliazer Demo?
---------------------------------
--> Spring-boot initiliazer is web based tool.
--> spring-boot initiliazer is used to create a "starter spring project".
--> search : spring.io

-->step  : A
=========
1 : project : mavne
2 : language: java
3 : spring boot version : 3.1.0
4 : project Metadate
	1 : group ID: com.tanveer
	2 : artifact: quizapp [ name of my application]
	3 : name : quizapp
	4 : description : Tanveer Quize Application
	5 : package name : com.tanveer.quizapp
	6 : packaging : jar
	7 : java version : 17

step : B
========
dependency :
------------

1 : Spring Web
4 : lombok
5 : swagger
<dependency>
		<groupId>org.springdoc</groupId>
		<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
		<version>2.0.0</version>
</dependency>


11 : Developmen process of spring boot project ?
---------------------------------------------
1 : Create a project using spring boot initiliazer. : [ start.spring.io]
2 : download the zip file
3 : Unzip the file
4 :  import the project into our IDE

12 : Goals of Spring
-------------------
1 : Lighweight development with Java Pojos : plane-old-java-objects
2 : Dependency injection to promote loose coupling.
3 : minimize boilerplate java code


13 : what is mean by controller?
-------------------------------
1 : it is light weight 
2 : controller handle request and respose.
3 : business logic is not present in the controller.
4 : controller handle exception
5 : controller class annotated with @Controllert or @RestController annotation.

14 : what is mean by service?
-----------------------------
1 : it is heavy weight.
2 : service process a request.
3 : business logic are present in the service.
4: service class annotated with @Service annotation


15: what is mean by POJO?
-------------------------
1 : POJO : plane old java objects
2 : pojo is a simple java class
3 : json resquest and respose handle by the pojo

16 : what is mean by DAO?
-------------------------
1 : DAO : data access objects
2 : it is simple java class which conatin JDB logic
3 : DAO is important component in business logic.


17 : spring-boot component?
--------------------------
1 : spring-boot-starter
2 : spring-boot autocifiguration
3 : spring-boot actuator
4 : spring-boot CLI

18 : what are possible source of external configuration?
--------------------------------------------------------
1 : Application.properties
2 : command line properties
3 : profile specific properties

19 : what is dependency management in spring boot?
-------------------------------------------------
--> dependency management is basically used to manage " dependency and configuration " automatically without specifying the version of that dependency.


							DEV TOOLS : restart server again and agin
							=========================================
20 : what is used of sprin-boot dev tools ?
problem
--------
--> when running Spring-boot Application
--> If you make changes to your source code 
--> then you have manually restart your application.


solution
--------
--> use of sprin-boot-devtools
--> "automatically restart your application when code is updated" .
--> Simply add the the dependency to your Pom file

note : Intellij Community edition does not support DevTools by default
--> u have to additional configuration 
	setting --> Build , Exceution , Deployment --> Compiler
--> check the box : Build project automatically
	setting --> advanced setting
--> check the box : allow auto-make-to start................



						Resouces package
						=================

21 : what is used of Application.properties
-------------------------------------------
--> by default , spring-boot will load properties from : application.properties
--> application properties is created by spring initiliazer.
--> application.properties empty at the beginning
--> we can add spring boot properties
example : server.port=1111
		  team.name = ppay-team

21 : how to read data from application properties?
--------------------------------------------------
--> Read data from : application.properties
--> appliction.properties file located  : src/main/resources/appliction.properties
--> spring boot read the data from appliction.properties using @Value("${key}") annoation.

# key = value
team.name = ppy-team
mail.host = gmail.com
mail.email = tas@gmail.com
mail.password= 1999

--> using @Value("${ team.name}")
	private String  teamName
	



7 : development process to read the data from appliction.properties?
-------------------------------------------------------------------
1 : define custom properties in the appliction.properties file
2 : Inject properties into spring boot appliction using @value annoation.


7 : spring boot properties
--------------------------
# Http server port
server.port = 1234

#context path of the appliction
server.servlet.context-path = / my-app

http://localhost:7070/my-app/


22 : what is used of static package ?
-----------------------------------
--> by default spring-boot will load static resources from "/static" directory.
--> example od static resources HTML file, CSS , JavaScript , images etc.

23 : what is used of template package ?
-----------------------------------
--> by default sprin-boot will load template resources from "/template" directory.


			Running from command Line
			=========================
24 : how to run spring-boot application?
--------------------------------------
--> two options to run a spring boot appliction from command line
1 : use jar file 
	-----> java -jar jare_path_name
	
2 : use spring boot maven plugin
	-----> mvn spring-boot:run
	